type Token @entity(immutable: true) {
    id: Bytes!
    name: String!
    symbol: String!
    decimals: BigInt!
    pools: [Pool!]! @derivedFrom(field: "tokens")
}

type Gauge @entity(immutable: true) {
    id: Bytes!
}

type LpToken @entity(immutable: true) {
    id: Bytes!
    pool: Pool!
}

type Pool @entity {
    id: Bytes!
    tokens: [Token!]!
    tvls: [BigInt!]!
    liquidity: BigInt!
    base: Pool
    gauge: Gauge
    lpToken: [LpToken!]! @derivedFrom(field: "pool")
    positions: [Position!]! @derivedFrom(field: "pool")

    _tvlsUpdatedAtBlock: BigInt!
}

type Position @entity {
    id: Bytes!
    owner: Bytes!
    liquidity: BigInt!
    pool: Pool!
    liquidityChanges: [LiquidityChange!]! @derivedFrom(field: "position")
}

type LiquidityChange @entity(immutable: true) {
    id: Bytes!
    timestamp: BigInt!
    blockNumber: BigInt!
    delta: BigInt!
    position: Position!
}

type LiquidityTransfer @entity(immutable: true) {
    id: Bytes!
    timestamp: BigInt!
    blockNumber: BigInt!
    from: Bytes!
    to: Bytes!
    amount: BigInt!
    pool: Pool!
}
