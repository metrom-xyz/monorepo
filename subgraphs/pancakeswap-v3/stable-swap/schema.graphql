type Token @entity(immutable: true) {
    id: Bytes!
    name: String!
    symbol: String!
    decimals: BigInt!
}

type Pool @entity {
    id: Bytes!
    token0: Token!
    token1: Token!
    token2: Token
    token0Tvl: BigInt!
    token1Tvl: BigInt!
    token2Tvl: BigInt
    fee: BigInt!
    liquidity: BigInt!
    positions: [Position!]! @derivedFrom(field: "pool")
}

type Position @entity {
    id: Bytes!
    owner: Bytes!
    liquidity: BigInt!
    pool: Pool!
    liquidityChanges: [LiquidityChange!]! @derivedFrom(field: "position")
}

type LiquidityChange @entity(immutable: true) {
    id: Bytes!
    timestamp: BigInt!
    blockNumber: BigInt!
    transactionHash: Bytes!
    delta: BigInt!
    position: Position!
}

type LiquidityTransfer @entity(immutable: true) {
    id: Bytes!
    timestamp: BigInt!
    blockNumber: BigInt!
    transactionHash: Bytes!
    from: Bytes!
    to: Bytes!
    amount: BigInt!
    pool: Pool!
}
