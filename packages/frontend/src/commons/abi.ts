export const metromAptosAbi = {
    address:
        "0xe1c55a37640ff4582a47bacd396e3409056f2e931b5dd8dc6ef6ef131cf5cc9e",
    name: "metrom",
    friends: [],
    exposed_functions: [
        {
            name: "owner",
            visibility: "public",
            is_entry: false,
            is_view: true,
            generic_type_params: [],
            params: [],
            return: ["address"],
        },
        {
            name: "distribute_rewards",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: ["&signer", "vector<u8>", "vector<u8>"],
            return: [],
        },
        {
            name: "fee",
            visibility: "public",
            is_entry: false,
            is_view: true,
            generic_type_params: [],
            params: [],
            return: ["u32"],
        },
        {
            name: "accept_campaign_ownership",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: ["&signer", "vector<u8>"],
            return: [],
        },
        {
            name: "accept_ownership",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: ["&signer"],
            return: [],
        },
        {
            name: "updater",
            visibility: "public",
            is_entry: false,
            is_view: true,
            generic_type_params: [],
            params: [],
            return: ["address"],
        },
        {
            name: "campaign_reward",
            visibility: "public",
            is_entry: false,
            is_view: true,
            generic_type_params: [],
            params: ["vector<u8>", "address"],
            return: ["u64"],
        },
        {
            name: "claim_fees",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: ["&signer", "address", "address"],
            return: [],
        },
        {
            name: "claim_rewards",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: [
                "&signer",
                "vector<u8>",
                "vector<vector<u8>>",
                "address",
                "u64",
                "address",
            ],
            return: [],
        },
        {
            name: "claimable_fees",
            visibility: "public",
            is_entry: false,
            is_view: true,
            generic_type_params: [],
            params: ["address"],
            return: ["u64"],
        },
        {
            name: "claimed_campaign_reward",
            visibility: "public",
            is_entry: false,
            is_view: true,
            generic_type_params: [],
            params: ["vector<u8>", "address", "address"],
            return: ["u64"],
        },
        {
            name: "create_points_campaign",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: [
                "&signer",
                "u64",
                "u64",
                "u32",
                "vector<u8>",
                "vector<u8>",
                "u64",
                "address",
            ],
            return: [],
        },
        {
            name: "create_reward_campaign",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: [
                "&signer",
                "u64",
                "u64",
                "u32",
                "vector<u8>",
                "vector<u8>",
                "vector<address>",
                "vector<u64>",
            ],
            return: [],
        },
        {
            name: "fee_rebate",
            visibility: "public",
            is_entry: false,
            is_view: true,
            generic_type_params: [],
            params: ["address"],
            return: ["u32"],
        },
        {
            name: "init_module",
            visibility: "private",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: ["&signer"],
            return: [],
        },
        {
            name: "init_state",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: ["&signer", "address", "address", "u32", "u64", "u64"],
            return: [],
        },
        {
            name: "minimum_campaign_duration",
            visibility: "public",
            is_entry: false,
            is_view: true,
            generic_type_params: [],
            params: [],
            return: ["u64"],
        },
        {
            name: "maximum_campaign_duration",
            visibility: "public",
            is_entry: false,
            is_view: true,
            generic_type_params: [],
            params: [],
            return: ["u64"],
        },
        {
            name: "minimum_fee_token_rate",
            visibility: "public",
            is_entry: false,
            is_view: true,
            generic_type_params: [],
            params: ["address"],
            return: ["u64"],
        },
        {
            name: "minimum_reward_token_rate",
            visibility: "public",
            is_entry: false,
            is_view: true,
            generic_type_params: [],
            params: ["address"],
            return: ["u64"],
        },
        {
            name: "pending_owner",
            visibility: "public",
            is_entry: false,
            is_view: true,
            generic_type_params: [],
            params: [],
            return: ["0x1::option::Option<address>"],
        },
        {
            name: "points_campaign_by_id",
            visibility: "public",
            is_entry: false,
            is_view: true,
            generic_type_params: [],
            params: ["vector<u8>"],
            return: [
                "0xe1c55a37640ff4582a47bacd396e3409056f2e931b5dd8dc6ef6ef131cf5cc9e::metrom::PointsCampaign",
            ],
        },
        {
            name: "points_campaign_id",
            visibility: "public",
            is_entry: false,
            is_view: true,
            generic_type_params: [],
            params: [
                "u64",
                "u64",
                "u32",
                "vector<u8>",
                "vector<u8>",
                "u64",
                "address",
            ],
            return: ["vector<u8>"],
        },
        {
            name: "recover_rewards",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: [
                "&signer",
                "vector<u8>",
                "vector<vector<u8>>",
                "address",
                "u64",
                "address",
            ],
            return: [],
        },
        {
            name: "rewards_campaign_by_id",
            visibility: "public",
            is_entry: false,
            is_view: true,
            generic_type_params: [],
            params: ["vector<u8>"],
            return: [
                "0xe1c55a37640ff4582a47bacd396e3409056f2e931b5dd8dc6ef6ef131cf5cc9e::metrom::ReadonlyRewardsCampaign",
            ],
        },
        {
            name: "rewards_campaign_id",
            visibility: "public",
            is_entry: false,
            is_view: true,
            generic_type_params: [],
            params: [
                "u64",
                "u64",
                "u32",
                "vector<u8>",
                "vector<u8>",
                "vector<address>",
                "vector<u64>",
            ],
            return: ["vector<u8>"],
        },
        {
            name: "set_fee",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: ["&signer", "u32"],
            return: [],
        },
        {
            name: "set_fee_rebate",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: ["&signer", "address", "u32"],
            return: [],
        },
        {
            name: "set_maximum_campaign_duration",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: ["&signer", "u64"],
            return: [],
        },
        {
            name: "set_minimum_campaign_duration",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: ["&signer", "u64"],
            return: [],
        },
        {
            name: "set_minimum_fee_token_rate",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: ["&signer", "address", "u64"],
            return: [],
        },
        {
            name: "set_minimum_reward_token_rate",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: ["&signer", "address", "u64"],
            return: [],
        },
        {
            name: "set_updater",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: ["&signer", "address"],
            return: [],
        },
        {
            name: "transfer_campaign_ownership",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: ["&signer", "vector<u8>", "address"],
            return: [],
        },
        {
            name: "transfer_ownership",
            visibility: "public",
            is_entry: true,
            is_view: false,
            generic_type_params: [],
            params: ["&signer", "address"],
            return: [],
        },
    ],
    structs: [
        {
            name: "State",
            is_native: false,
            is_event: false,
            abilities: ["key"],
            generic_type_params: [],
            fields: [
                {
                    name: "treasury",
                    type: "0x1::account::SignerCapability",
                },
                {
                    name: "owner",
                    type: "address",
                },
                {
                    name: "pending_owner",
                    type: "0x1::option::Option<address>",
                },
                {
                    name: "updater",
                    type: "address",
                },
                {
                    name: "fee",
                    type: "u32",
                },
                {
                    name: "minimum_campaign_duration",
                    type: "u64",
                },
                {
                    name: "maximum_campaign_duration",
                    type: "u64",
                },
                {
                    name: "fee_rebate",
                    type: "0x1::smart_table::SmartTable<address, u32>",
                },
                {
                    name: "claimable_fees",
                    type: "0x1::smart_table::SmartTable<address, u64>",
                },
                {
                    name: "minimum_reward_token_rate",
                    type: "0x1::smart_table::SmartTable<address, u64>",
                },
                {
                    name: "minimum_fee_token_rate",
                    type: "0x1::smart_table::SmartTable<address, u64>",
                },
                {
                    name: "points_campaign",
                    type: "0x1::smart_table::SmartTable<vector<u8>, 0xe1c55a37640ff4582a47bacd396e3409056f2e931b5dd8dc6ef6ef131cf5cc9e::metrom::PointsCampaign>",
                },
                {
                    name: "rewards_campaign",
                    type: "0x1::smart_table::SmartTable<vector<u8>, 0xe1c55a37640ff4582a47bacd396e3409056f2e931b5dd8dc6ef6ef131cf5cc9e::metrom::RewardsCampaign>",
                },
            ],
        },
        {
            name: "Initialize",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "owner",
                    type: "address",
                },
                {
                    name: "updater",
                    type: "address",
                },
                {
                    name: "fee",
                    type: "u32",
                },
                {
                    name: "minimum_campaign_duration",
                    type: "u64",
                },
                {
                    name: "maximum_campaign_duration",
                    type: "u64",
                },
            ],
        },
        {
            name: "AcceptCampaignOwnership",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "campaign_id",
                    type: "vector<u8>",
                },
                {
                    name: "owner",
                    type: "address",
                },
            ],
        },
        {
            name: "AcceptOwnership",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "owner",
                    type: "address",
                },
            ],
        },
        {
            name: "ClaimFee",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "token",
                    type: "address",
                },
                {
                    name: "amount",
                    type: "u64",
                },
                {
                    name: "receiver",
                    type: "address",
                },
            ],
        },
        {
            name: "ClaimReward",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "campaign_id",
                    type: "vector<u8>",
                },
                {
                    name: "token",
                    type: "address",
                },
                {
                    name: "amount",
                    type: "u64",
                },
                {
                    name: "receiver",
                    type: "address",
                },
            ],
        },
        {
            name: "CreatePointsCampaign",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "id",
                    type: "vector<u8>",
                },
                {
                    name: "owner",
                    type: "address",
                },
                {
                    name: "from",
                    type: "u64",
                },
                {
                    name: "to",
                    type: "u64",
                },
                {
                    name: "kind",
                    type: "u32",
                },
                {
                    name: "data",
                    type: "vector<u8>",
                },
                {
                    name: "specification_hash",
                    type: "vector<u8>",
                },
                {
                    name: "points",
                    type: "u64",
                },
                {
                    name: "fee_token",
                    type: "address",
                },
                {
                    name: "fee",
                    type: "u64",
                },
            ],
        },
        {
            name: "CreateRewardsCampaign",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "id",
                    type: "vector<u8>",
                },
                {
                    name: "owner",
                    type: "address",
                },
                {
                    name: "from",
                    type: "u64",
                },
                {
                    name: "to",
                    type: "u64",
                },
                {
                    name: "kind",
                    type: "u32",
                },
                {
                    name: "data",
                    type: "vector<u8>",
                },
                {
                    name: "specification_hash",
                    type: "vector<u8>",
                },
                {
                    name: "reward_tokens",
                    type: "vector<address>",
                },
                {
                    name: "reward_amounts",
                    type: "vector<u64>",
                },
                {
                    name: "reward_fees",
                    type: "vector<u64>",
                },
            ],
        },
        {
            name: "DistributeReward",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "campaign_id",
                    type: "vector<u8>",
                },
                {
                    name: "root",
                    type: "vector<u8>",
                },
            ],
        },
        {
            name: "PointsCampaign",
            is_native: false,
            is_event: false,
            abilities: ["copy", "store", "key"],
            generic_type_params: [],
            fields: [
                {
                    name: "owner",
                    type: "address",
                },
                {
                    name: "pending_owner",
                    type: "0x1::option::Option<address>",
                },
                {
                    name: "from",
                    type: "u64",
                },
                {
                    name: "to",
                    type: "u64",
                },
                {
                    name: "kind",
                    type: "u32",
                },
                {
                    name: "data",
                    type: "vector<u8>",
                },
                {
                    name: "specification_hash",
                    type: "vector<u8>",
                },
                {
                    name: "points",
                    type: "u64",
                },
            ],
        },
        {
            name: "ReadonlyRewardsCampaign",
            is_native: false,
            is_event: false,
            abilities: [],
            generic_type_params: [],
            fields: [
                {
                    name: "owner",
                    type: "address",
                },
                {
                    name: "pending_owner",
                    type: "0x1::option::Option<address>",
                },
                {
                    name: "from",
                    type: "u64",
                },
                {
                    name: "to",
                    type: "u64",
                },
                {
                    name: "kind",
                    type: "u32",
                },
                {
                    name: "data",
                    type: "vector<u8>",
                },
                {
                    name: "specification_hash",
                    type: "vector<u8>",
                },
                {
                    name: "root",
                    type: "vector<u8>",
                },
            ],
        },
        {
            name: "RecoverReward",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "campaign_id",
                    type: "vector<u8>",
                },
                {
                    name: "token",
                    type: "address",
                },
                {
                    name: "amount",
                    type: "u64",
                },
                {
                    name: "receiver",
                    type: "address",
                },
            ],
        },
        {
            name: "Reward",
            is_native: false,
            is_event: false,
            abilities: ["store", "key"],
            generic_type_params: [],
            fields: [
                {
                    name: "amount",
                    type: "u64",
                },
                {
                    name: "claimed",
                    type: "0x1::smart_table::SmartTable<address, u64>",
                },
            ],
        },
        {
            name: "RewardsCampaign",
            is_native: false,
            is_event: false,
            abilities: ["store", "key"],
            generic_type_params: [],
            fields: [
                {
                    name: "owner",
                    type: "address",
                },
                {
                    name: "pending_owner",
                    type: "0x1::option::Option<address>",
                },
                {
                    name: "from",
                    type: "u64",
                },
                {
                    name: "to",
                    type: "u64",
                },
                {
                    name: "kind",
                    type: "u32",
                },
                {
                    name: "data",
                    type: "vector<u8>",
                },
                {
                    name: "specification_hash",
                    type: "vector<u8>",
                },
                {
                    name: "root",
                    type: "vector<u8>",
                },
                {
                    name: "reward",
                    type: "0x1::smart_table::SmartTable<address, 0xe1c55a37640ff4582a47bacd396e3409056f2e931b5dd8dc6ef6ef131cf5cc9e::metrom::Reward>",
                },
            ],
        },
        {
            name: "SetFee",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "fee",
                    type: "u32",
                },
            ],
        },
        {
            name: "SetFeeRebate",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "account",
                    type: "address",
                },
                {
                    name: "rebate",
                    type: "u32",
                },
            ],
        },
        {
            name: "SetMaximumCampaignDuration",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "maximum_campaign_duration",
                    type: "u64",
                },
            ],
        },
        {
            name: "SetMinimumCampaignDuration",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "minimum_campaign_duration",
                    type: "u64",
                },
            ],
        },
        {
            name: "SetMinimumFeeTokenRate",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "token",
                    type: "address",
                },
                {
                    name: "minimum_rate",
                    type: "u64",
                },
            ],
        },
        {
            name: "SetMinimumRewardTokenRate",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "token",
                    type: "address",
                },
                {
                    name: "minimum_rate",
                    type: "u64",
                },
            ],
        },
        {
            name: "SetUpdater",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "updater",
                    type: "address",
                },
            ],
        },
        {
            name: "TransferCampaignOwnership",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "campaign_id",
                    type: "vector<u8>",
                },
                {
                    name: "owner",
                    type: "address",
                },
            ],
        },
        {
            name: "TransferOwnership",
            is_native: false,
            is_event: true,
            abilities: ["drop", "store"],
            generic_type_params: [],
            fields: [
                {
                    name: "owner",
                    type: "address",
                },
            ],
        },
    ],
} as const;

export const velodromPoolAbi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "int24",
                name: "tickLower",
                type: "int24",
            },
            {
                indexed: true,
                internalType: "int24",
                name: "tickUpper",
                type: "int24",
            },
            {
                indexed: false,
                internalType: "uint128",
                name: "amount",
                type: "uint128",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount0",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount1",
                type: "uint256",
            },
        ],
        name: "Burn",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                indexed: true,
                internalType: "int24",
                name: "tickLower",
                type: "int24",
            },
            {
                indexed: true,
                internalType: "int24",
                name: "tickUpper",
                type: "int24",
            },
            {
                indexed: false,
                internalType: "uint128",
                name: "amount0",
                type: "uint128",
            },
            {
                indexed: false,
                internalType: "uint128",
                name: "amount1",
                type: "uint128",
            },
        ],
        name: "Collect",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint128",
                name: "amount0",
                type: "uint128",
            },
            {
                indexed: false,
                internalType: "uint128",
                name: "amount1",
                type: "uint128",
            },
        ],
        name: "CollectFees",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount0",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount1",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "paid0",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "paid1",
                type: "uint256",
            },
        ],
        name: "Flash",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint16",
                name: "observationCardinalityNextOld",
                type: "uint16",
            },
            {
                indexed: false,
                internalType: "uint16",
                name: "observationCardinalityNextNew",
                type: "uint16",
            },
        ],
        name: "IncreaseObservationCardinalityNext",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint160",
                name: "sqrtPriceX96",
                type: "uint160",
            },
            {
                indexed: false,
                internalType: "int24",
                name: "tick",
                type: "int24",
            },
        ],
        name: "Initialize",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "int24",
                name: "tickLower",
                type: "int24",
            },
            {
                indexed: true,
                internalType: "int24",
                name: "tickUpper",
                type: "int24",
            },
            {
                indexed: false,
                internalType: "uint128",
                name: "amount",
                type: "uint128",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount0",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount1",
                type: "uint256",
            },
        ],
        name: "Mint",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "feeProtocol0Old",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "uint8",
                name: "feeProtocol1Old",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "uint8",
                name: "feeProtocol0New",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "uint8",
                name: "feeProtocol1New",
                type: "uint8",
            },
        ],
        name: "SetFeeProtocol",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                indexed: false,
                internalType: "int256",
                name: "amount0",
                type: "int256",
            },
            {
                indexed: false,
                internalType: "int256",
                name: "amount1",
                type: "int256",
            },
            {
                indexed: false,
                internalType: "uint160",
                name: "sqrtPriceX96",
                type: "uint160",
            },
            {
                indexed: false,
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
            },
            {
                indexed: false,
                internalType: "int24",
                name: "tick",
                type: "int24",
            },
        ],
        name: "Swap",
        type: "event",
    },
    {
        inputs: [
            { internalType: "int24", name: "tickLower", type: "int24" },
            { internalType: "int24", name: "tickUpper", type: "int24" },
            { internalType: "uint128", name: "amount", type: "uint128" },
            { internalType: "address", name: "owner", type: "address" },
        ],
        name: "burn",
        outputs: [
            { internalType: "uint256", name: "amount0", type: "uint256" },
            { internalType: "uint256", name: "amount1", type: "uint256" },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "int24", name: "tickLower", type: "int24" },
            { internalType: "int24", name: "tickUpper", type: "int24" },
            { internalType: "uint128", name: "amount", type: "uint128" },
        ],
        name: "burn",
        outputs: [
            { internalType: "uint256", name: "amount0", type: "uint256" },
            { internalType: "uint256", name: "amount1", type: "uint256" },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "recipient", type: "address" },
            { internalType: "int24", name: "tickLower", type: "int24" },
            { internalType: "int24", name: "tickUpper", type: "int24" },
            {
                internalType: "uint128",
                name: "amount0Requested",
                type: "uint128",
            },
            {
                internalType: "uint128",
                name: "amount1Requested",
                type: "uint128",
            },
            { internalType: "address", name: "owner", type: "address" },
        ],
        name: "collect",
        outputs: [
            { internalType: "uint128", name: "amount0", type: "uint128" },
            { internalType: "uint128", name: "amount1", type: "uint128" },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "recipient", type: "address" },
            { internalType: "int24", name: "tickLower", type: "int24" },
            { internalType: "int24", name: "tickUpper", type: "int24" },
            {
                internalType: "uint128",
                name: "amount0Requested",
                type: "uint128",
            },
            {
                internalType: "uint128",
                name: "amount1Requested",
                type: "uint128",
            },
        ],
        name: "collect",
        outputs: [
            { internalType: "uint128", name: "amount0", type: "uint128" },
            { internalType: "uint128", name: "amount1", type: "uint128" },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "collectFees",
        outputs: [
            { internalType: "uint128", name: "amount0", type: "uint128" },
            { internalType: "uint128", name: "amount1", type: "uint128" },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "factory",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "fee",
        outputs: [{ internalType: "uint24", name: "", type: "uint24" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "feeGrowthGlobal0X128",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "feeGrowthGlobal1X128",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "recipient", type: "address" },
            { internalType: "uint256", name: "amount0", type: "uint256" },
            { internalType: "uint256", name: "amount1", type: "uint256" },
            { internalType: "bytes", name: "data", type: "bytes" },
        ],
        name: "flash",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "gauge",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "gaugeFees",
        outputs: [
            { internalType: "uint128", name: "token0", type: "uint128" },
            { internalType: "uint128", name: "token1", type: "uint128" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "int24", name: "tickLower", type: "int24" },
            { internalType: "int24", name: "tickUpper", type: "int24" },
            {
                internalType: "uint256",
                name: "_rewardGrowthGlobalX128",
                type: "uint256",
            },
        ],
        name: "getRewardGrowthInside",
        outputs: [
            {
                internalType: "uint256",
                name: "rewardGrowthInside",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint16",
                name: "observationCardinalityNext",
                type: "uint16",
            },
        ],
        name: "increaseObservationCardinalityNext",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "_factory", type: "address" },
            { internalType: "address", name: "_token0", type: "address" },
            { internalType: "address", name: "_token1", type: "address" },
            { internalType: "int24", name: "_tickSpacing", type: "int24" },
            { internalType: "uint160", name: "_sqrtPriceX96", type: "uint160" },
            { internalType: "address", name: "_gauge", type: "address" },
            { internalType: "address", name: "_nft", type: "address" },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "lastUpdated",
        outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "liquidity",
        outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "maxLiquidityPerTick",
        outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "recipient", type: "address" },
            { internalType: "int24", name: "tickLower", type: "int24" },
            { internalType: "int24", name: "tickUpper", type: "int24" },
            { internalType: "uint128", name: "amount", type: "uint128" },
            { internalType: "bytes", name: "data", type: "bytes" },
        ],
        name: "mint",
        outputs: [
            { internalType: "uint256", name: "amount0", type: "uint256" },
            { internalType: "uint256", name: "amount1", type: "uint256" },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "nft",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        name: "observations",
        outputs: [
            { internalType: "uint32", name: "blockTimestamp", type: "uint32" },
            { internalType: "int56", name: "tickCumulative", type: "int56" },
            {
                internalType: "uint160",
                name: "secondsPerLiquidityCumulativeX128",
                type: "uint160",
            },
            { internalType: "bool", name: "initialized", type: "bool" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint32[]", name: "secondsAgos", type: "uint32[]" },
        ],
        name: "observe",
        outputs: [
            {
                internalType: "int56[]",
                name: "tickCumulatives",
                type: "int56[]",
            },
            {
                internalType: "uint160[]",
                name: "secondsPerLiquidityCumulativeX128s",
                type: "uint160[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "periodFinish",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        name: "positions",
        outputs: [
            { internalType: "uint128", name: "liquidity", type: "uint128" },
            {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
            },
            { internalType: "uint128", name: "tokensOwed0", type: "uint128" },
            { internalType: "uint128", name: "tokensOwed1", type: "uint128" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "rewardGrowthGlobalX128",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "rewardRate",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "rewardReserve",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "rollover",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "slot0",
        outputs: [
            { internalType: "uint160", name: "sqrtPriceX96", type: "uint160" },
            { internalType: "int24", name: "tick", type: "int24" },
            {
                internalType: "uint16",
                name: "observationIndex",
                type: "uint16",
            },
            {
                internalType: "uint16",
                name: "observationCardinality",
                type: "uint16",
            },
            {
                internalType: "uint16",
                name: "observationCardinalityNext",
                type: "uint16",
            },
            { internalType: "bool", name: "unlocked", type: "bool" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "int24", name: "tickLower", type: "int24" },
            { internalType: "int24", name: "tickUpper", type: "int24" },
        ],
        name: "snapshotCumulativesInside",
        outputs: [
            {
                internalType: "int56",
                name: "tickCumulativeInside",
                type: "int56",
            },
            {
                internalType: "uint160",
                name: "secondsPerLiquidityInsideX128",
                type: "uint160",
            },
            { internalType: "uint32", name: "secondsInside", type: "uint32" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int128",
                name: "stakedLiquidityDelta",
                type: "int128",
            },
            { internalType: "int24", name: "tickLower", type: "int24" },
            { internalType: "int24", name: "tickUpper", type: "int24" },
        ],
        name: "stake",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "stakedLiquidity",
        outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "recipient", type: "address" },
            { internalType: "bool", name: "zeroForOne", type: "bool" },
            { internalType: "int256", name: "amountSpecified", type: "int256" },
            {
                internalType: "uint160",
                name: "sqrtPriceLimitX96",
                type: "uint160",
            },
            { internalType: "bytes", name: "data", type: "bytes" },
        ],
        name: "swap",
        outputs: [
            { internalType: "int256", name: "amount0", type: "int256" },
            { internalType: "int256", name: "amount1", type: "int256" },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint256", name: "_rewardRate", type: "uint256" },
            {
                internalType: "uint256",
                name: "_rewardReserve",
                type: "uint256",
            },
            { internalType: "uint256", name: "_periodFinish", type: "uint256" },
        ],
        name: "syncReward",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "int16", name: "", type: "int16" }],
        name: "tickBitmap",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "tickSpacing",
        outputs: [{ internalType: "int24", name: "", type: "int24" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "int24", name: "", type: "int24" }],
        name: "ticks",
        outputs: [
            {
                internalType: "uint128",
                name: "liquidityGross",
                type: "uint128",
            },
            { internalType: "int128", name: "liquidityNet", type: "int128" },
            {
                internalType: "int128",
                name: "stakedLiquidityNet",
                type: "int128",
            },
            {
                internalType: "uint256",
                name: "feeGrowthOutside0X128",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "feeGrowthOutside1X128",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "rewardGrowthOutsideX128",
                type: "uint256",
            },
            {
                internalType: "int56",
                name: "tickCumulativeOutside",
                type: "int56",
            },
            {
                internalType: "uint160",
                name: "secondsPerLiquidityOutsideX128",
                type: "uint160",
            },
            { internalType: "uint32", name: "secondsOutside", type: "uint32" },
            { internalType: "bool", name: "initialized", type: "bool" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "token0",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "token1",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "tokens",
        outputs: [
            { internalType: "address", name: "token0_", type: "address" },
            { internalType: "address", name: "token1_", type: "address" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "unstakedFee",
        outputs: [{ internalType: "uint24", name: "", type: "uint24" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "updateRewardsGrowthGlobal",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
] as const;
